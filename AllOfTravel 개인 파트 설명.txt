프로젝트 명 : All Of Travel(AOT) – (Spring MVC페이지 – 데이터베이스 기반)

투입 인원 :  4명

프로젝트 소개 :  호텔 / 항공 / 레저 / 렌터카를 카테고리 별로 탐색 및 예약 가능하며 각 카테고리 별 커뮤니티 사이트도 설계하여  이를 통해 회원들 간의 정보 공유 및 소통할 수 있는 웹 사이트

공동작업 : 
1.	각각 생각해온 아이디어로 진행된 회의를 통해 프로젝트 기획 및 오픈소스 수집
2.	기획 후 사용할 대략적인 HTML, DTO, 데이터베이스 정의 및 설계
3.	프로젝트 시작하기 전 개개인의 역량에 맞춰 역할 분배
4.	기획서를 보며 스토리 보드 제작
5.	스토리 보드를 보며 Job List 제작
6.	Job List를 보며 ER Diagram 제작
7.	ER Diagram을 보며 데이터베이스 구현

팀장 / 총괄 엔지니어 :
	팀원들이 작성한 코드들을 하나로 합치고 그에 대한 에러코드 및 오류를 검출해 수정
	팀원들의 작업 현황을 매일 조사하고 현황에 따라 스케줄이나 디테일을 변경
	팀원들의 작업 중 어려움을 도와주고 설명
	Job List와 Story Board의 전체적인 형식을 미리 만든 뒤 배포
	코딩 작업을 먼저 끝낸 후 팀원들에게 참고서로서 배포 및 작업이 더 수월해지도록 진행
 
기능 구현
1.	호텔 목록이 출력되는 호텔 예약 페이지
	검색창을 이용해 원하는 호텔을 검색 가능 : 24번 기능
	bxSlider을 사용하여 인기 호텔 3개가 출력되며 클릭 시 해당 호텔 상세페이지로 이동 : 2번 기능
	보유하고 있는 호텔 개수만큼 Thymeleaf를 사용하여 해당 정보들과 함께 목록들이 출력
	목록 중 원하는 호텔을 클릭 시 해당 호텔 상세페이지로 이동 : 2번 기능

2.	해당 호텔이 소유한 객실 목록이 출력되는 호텔 예약 페이지
	호텔의 기본키를 이용하여 하나의 HTML에 클릭되어진 호텔의 정보가 넘어와서 출력
	해당 호텔의 사진이 bxSlider을 사용하여 출력
	소유하고 있는 객실의 개수만큼 Thymeleaf를 사용하여 해당 정보들과 함께 목록들이 출력
	목록 중 원하는 객실을 클릭 시 해당 객실 상세페이지로 이동 : 3번 기능
	해당 호텔의 실제 평점의 평균 출력 및 실제 평가 후기로 이동 : 8번 기능
	이모티콘 클릭 시 찜 목록에 추가 및 삭제 : 4번 기능
	Back Button을 이용하여 이전 페이지로 이동 : 1번기능

3. 해당 객실의 상세 페이지
	객실의 기본키를 이용하여 하나의 HTML에 클릭되어진 해당 객실의 정보가 넘어와서 출력
	원하는 체크인 체크아웃 날짜 선택 가능
	투숙 인원 선택 가능
	Back Button을 이용하여 이전 페이지로 이동 : 2번 기능
	예약하기 클릭 시, 해당 호텔, 객실, 로그인한 고객의 정보(세션에 저장), 그리고 선택한 옵션의 정보가 결제 페이지로 이동 : 9번 기능

4. 찜하기 기능
	호텔 / 레저 / 항공 / 렌터카 상세 페이지에서 마음에 드는 회사를 저장하고 싶을 때, 이모티콘 클릭
	클릭 시, 로그인한 고객(세션에 저장)의 찜 목록(데이터 베이스)에 해당 회사가 들어가 있는지 Mapper, LIKE, 그리고 와일드카드를 통해 비교
   없을 경우 : 데이터 베이스에 저장 : 26번 기능
   있을 경우 : 데이터 베이스에서 삭제 : 25번 기능
	삭제 / 삽입 / 수정은 Transaction을 활용 

5. 찜 목록 페이지
	로그인한 고객(세션에 저장)의 찜 목록을 하나의 HTML에 카테고리 별 출력
	호텔이 찜 목록의 기본 페이지로 출력
	카테고리 선택 가능
	목록 중 원하는 회사를 클릭 시 해당 회사의 상세페이지로 이동 : 2번 기능
	목록에서 삭제하고 싶은 회사의 이모티콘을 선택 시 데이터 베이스와 목록에서 삭제 : 4번 기능
	페이지 버튼을 이용하여 페이지 이동 가능 : 6번 기능

6. 페이지 기능
	페이지버튼이 필요한 화면에다가 삽입
	출력할 게시물의 개수에 비례해서 필요한 페이지 버튼이 생성 
     Ex :  1  or  1 2 3 4 5  
	삼각형을 클릭 시 이전 혹은 다음 페이지로 이동
	숫자를 클릭 시 해당 페이지로 이동

7. 실제 이용 후기 평가 작성 페이지
	이용 후 예약 내역에서 넘어올 수 있는 페이지이기 때문에 실제 이용자들만 작성 가능
	짧은 리뷰 작성과 1 – 10 점의 점수 선택 가능
	로그인한 고객의 정보(세션에 저장)와 함께 데이터 베이스에 저장
	삭제 / 삽입 / 수정은 Transaction을 활용 : 26번 기능

8. 실제 이용 후기 평가 목록 페이지
	해당 회사의 상세 페이지에서 넘어올 수 있기 때문에 다양한 실제 이용 고객들이 해당 회사에 대해 작성한 솔직 리뷰와 평가 점수 출력
	평균 평가 점수와 총 후기 개수 출력
	페이지 버튼을 이용하여 페이지 이동 가능 : 6번 기능

9. 결제 페이지
	상품 상세페이지에서 넘어온 상품 (회사 + 상품)의 정보, 로그인한 고객의 정보(세션에 저장), 그리고 선택한 옵션의 정보 출력
	결제 방법 선택 가능 ( 카카오페이 API / 무통장 입금 )
	선금 10000원 결제 후 잔금을 메시지 출력 및 예약 상세 내역에 출력 
	동의 리스트 기능 구현 : 28번 기능
	결제 취소 및 결제하기 선택 가능 : 
                 취소 시 해당 상품 상세 페이지로 이동 : 3번 기능
                 결제 시 예약 상세 페이지로 이동 : 12번 기능
	삭제  /  삽입 / 수정은 Transaction을 활용 : 26번 기능

10. 이용 전 예약 목록 페이지
	카테고리 선택 가능
	호텔을 이용 전 예약 목록의 기본 페이지로 먼저 출력
	Switch case 문을 활용하여 카테고리 구분 및 하나의 데이터베이스 테이블로부터 출력
	status컬럼을 활용하여 로그인한 고객(세션에 저장)의 예약 내역 중 이용 전에 해당하며 선택한 카테고리(호텔 / 항공 / 렌터카 / 레저)에 해당하는 예약 목록 출력
	페이지 버튼을 이용하여 페이지 이동 가능 : 6번 기능

11. 이용 후 예약 목록 페이지
	카테고리 선택 가능
	호텔을 이용 후 예약 목록의 기본 페이지로 먼저 출력
	Switch case 문을 활용하여 카테고리 구분 및 하나의 데이터베이스 테이블로부터 출력
	status컬럼을 활용하여 로그인한 고객(세션에 저장)의 예약 내역 중 이용 후에 해당하며 선택한 카테고리(호텔 / 항공 / 렌터카 / 레저)에 해당하는 예약 목록 출력
	페이지 버튼을 이용하여 페이지 이동 가능 : 6번 기능

12. 예약 상세 페이지
	이용 전/후 예약 목록 페이지로부터 또는 결제 페이지로부터 이동
	해당 예약번호를 통해 예약 상세 페이지에 해당 예약의 정보를 출력
	status 가 "이용전"일 경우에만 예약 수정 및 취소 버튼이 출력되도록 if문 활용
	예약 취소 가능 : 25번 기능
	예약 변경 가능 : 13번기능
	예약 목록으로 이동 가능 : 10번기능, 11번 기능

13. 예약 수정 페이지
	예약 상세 페이지로부터 이동
	변경 가능한 부분은 input 혹은 select으로 처리
	select의 옵션을 선택함에 따라 html에 해당 가격 및 전체 가격의 출력 값에 변화를 주기 위하여 ajax 및 JavaScript 활용
	예약 취소 가능 : 25번 기능
	예약 변경 완료 가능: 27번 기능
	예약 목록으로 이동 가능 : 10번기능

14. 커뮤니티 관련 리뷰 목록 페이지
	카테고리 선택 가능
	각 연결할 곳에 카테고리명을 함께 전송 후 switch case 문을 활용하여 해당 정보 출력
	페이지 버튼을 이용하여 페이지 이동 가능 : 6번 기능
	검색창을 이용해 원하는 리뷰를 검색 가능 : 24번 기능
	원하는 리뷰를 클릭 시 리뷰 상세 페이지로 이동 가능: 16번 기능
	로그인 시에만 글쓰기 버튼이 출력되도록 if문 활용
	글쓰기 버튼을 통해 리뷰 작성 페이지로 이동 가능 : 15번 기능

15. 커뮤니티 관련 리뷰 작성 페이지
	제목, 내용, 파일 업로드 가능
	파일 업로드 버튼 클릭 시 파일 업로드 가능 : 31번 기능
	선택된 파일들의 파일명 및 개수 출력
	작성자는 로그인한 고객의 정보(세션에 저장)로 hidden 처리
	Date는 Timestamp를 활용하여 현재 날짜로 처리
	글쓰기 완료 버튼을 통해 리뷰 상세 페이지로 이동 : 16번 기능
 작성되어진 데이터들의 value값을 Mapper을 통해 데이터 베이스에 삽입
 삭제  /  삽입 / 수정은 Transaction을 활용 : 26번 기능
	Back Button을 통해 리뷰 목록 페이지로 이동 : 14번 기능

16. 커뮤니티 관련 리뷰 상세 페이지
	리뷰 목록 페이지 혹은 리뷰 작성 페이지로부터 이동
	해당 리뷰의 기본키로 Mapper을 통해 데이터 베이스에서 비교 후 출력
	해당 리뷰의 파일을 해당 리뷰의 기본키로Mapper을 통해 데이터 베이스에서 비교 후 파일의 이름을 저장해 둔 경로에 이어서 출력
	로그인이 되어있을 경우만 댓글 작성이 가능하도록 해당 form을 if문을 활용하여 출력
	해당 리뷰의 댓글을 해당 리뷰의 기본키로Mapper을 통해 데이터 베이스로부터 출력
	해당 리뷰에 대한 댓글 작성 가능 : 30번 기능
	Back Button을 통해 리뷰 목록 페이지로 이동 : 14번 기능
	리뷰의 작성자의 아이디와 로그인한 아이디가 동일할 경우 삭제 및 수정 버튼 출력
	삭제 버튼 클릭 시 리뷰의 기본키를 활용해 데이터 베이스에서 삭제 : 25번 기능
	수정 버튼 클릭 시 수정 페이지로 이동 : 17번 기능
 조회수 기능 : 34번 기능

17. 커뮤니티 관련 리뷰 수정 페이지
	해당 리뷰의 기본키로 Mapper을 통해 데이터 베이스에서 비교 후 출력
	수정 가능한 부분들 input으로 처리
	수정되어진 부분들의 value를 Mapper을 통해 데이터 베이스에 전송 및 수정 : 27번 기능
	수정 완료 후 해당 리뷰 상세 페이지로 이동 : 16번 기능

18. 회원가입 페이지
	아이디 중복 체크 ajax를 활용하여 데이터 베이스로 데이터 전송 및 비교 후 메시지 출력
	모든 input에 데이터가 작성되었는지 확인 후 로그인 페이지로 이동 : 19번 기능
	BCryptPasswordEncoder를 이용하여 비밀번호 암호화 후 데이터 베이스에 저장
	작성되어진 데이터들의 value값을 Mapper을 통해 데이터 베이스에 삽입
	삭제  /  삽입 / 수정은 Transaction을 활용 : 26번 기능

19. 로그인 페이지
	로그인 화면에 아이디 및 비밀 번호 입력
	아이디를 Mapper을 통해 비교 후 해당 아이디에 해당하는 암호화된 비밀번호를 비교
	일치할 경우 로그인 정보를 세션에 저장 후 메인 화면으로 이동 : 29번기능
	불일치할 경우 메시지 출력 후 로그인 화면 지속

20. 회원 정보 출력 페이지
	로그인한 고객의 아이디(세션에 저장)를 Mapper을 통해 데이터 베이스에서 정보를 가져와서 출력
	SELECT 쿼리 문 사용

21. 회원 정보 수정 페이지
	로그인한 고객의 아이디(세션에 저장)를 Mapper을 통해 데이터 베이스에서 정보를 가져와서 출력
	수정 가능한 부분들 input으로 처리
	수정되어진 부분들의 value를 Mapper을 통해 데이터 베이스에 전송 및 수정 : 27번 기능
 비밀번호 변경 버튼 클릭시 비밀번호 변경 페이지로 이동 :  33번 기능
	수정 완료 후 회원 정보 출력 페이지로 이동 : 20번 기능

22. 아이디 찾기 페이지
	회원의 이름과 이메일 입력을 받은 뒤 Mapper을 통해 데이터 베이스와 비교 후 해당 아이디 출력
	일치하는 정보가 없을 경우 메시지 출력

23. 비밀번호 찾기 페이지
	회원의 아이디와 이메일을 입력을 받은 뒤 일치하는 값이 있을 경우 해당 이메일에 비밀번호 재설정 페이지 링크 전송
 링크 클릭 시 비밀번호 변경 페이지로 이동 : 33번 기능
	일치하지 않을 경우 메시지 출력
	API 이메일 전송 활용 


24. 검색 기능
	작성되어진 키워드를 Mapper을 통해 데이터 베이스 데이터와 Like와 와일드카드를 활용하여 비교함으로써 해당되는 게시물만 출력
	SELECT 쿼리 문 사용

25. 삭제 / 취소 기능
	해당 정보의 기본키를 Mapper을 통해 데이터 베이스에서 비교하여 해당 정보를 삭제
	DELETE 쿼리 문 사용

26. 삽입 / 저장 기능
	저장하고 싶은 정보들을value값으로 넘겨서Mapper을 통해 데이터베이스에 삽입
	조건 추가 가능
	INSERT쿼리 문 사용

27. 업데이트 기능
	수정하고 싶은 정보들을value값으로 넘겨서Mapper을 통해 데이터 베이스에 수정
	조건 추가 가능
	UPDATE쿼리 문 사용

28. 동의하기 기능
	JavaScript를 통해 버튼 전체 선택 기능 추가
	해당 버튼들이 전부 선택되어져 있을 시에만 다음 페이지로 이동 가능

29. 메인 화면
	오픈 소스를 활용하여 연결 및 수정
	해당 부분들에 맞게 클릭 시 해당 페이지 이동 설정

30. 댓글 작성 기능
	댓글 입력 칸을 input으로 처리
	댓글 저장 버튼 클릭 시 해당 리뷰의 기본키를 외래키로 데이터 베이스에 삽입
	삭제  /  삽입 / 수정은 Transaction을 활용 :  26번 기능

31. 파일 업로드 기능
	파일 업로드 시 webapp의 upload폴더에 저장
	폴더가 없을 경우 폴더 생성 처리
	해당 리뷰 작성 버튼 클릭 시 해당 리뷰의 기본키를 외래키로 데이터 베이스에 삽입
	삭제  /  삽입 / 수정은 Transaction을 활용 : 26번 기능
	파일의 이름은 중복 가능성을 염두 하여 밀로 초를 활용하여 새로운 이름으로 저장
	파일의 경로를 realPath를 활용하여 저장

32. 지도 API
	카카오맵 API 활용
	DTO에 각 해당 데이터를 담아 해당 회사의 위도와 경도 출력

33. 비밀 번호 변경 페이지 
 비밀번호 일치 여부 확인 후 BCryptPasswordEncoder를 이용하여 비밀번호 암호화 후 데이터베이스에 업데이트 : 27번 기능
 로그인 화면으로 이동 : 19번 기능

34. 조회수 기능
 로그인하지 않은 경우나 로그인한 회원의 정보와 게시물 작성자의 정보가 같지 않을 경우 조회수 증가
 비교하기 위해 if문 활용 

35. fragments
	Header. Footer, Menu bar, index bar을 th:fragment를 활용하여 분리 작업 가능
	분리한 뒤, 사용할 페이지에서 th:insert를 활용하여 출력
	th:if 와 th:unless를 활용하여 상황에 따라 다르게 출력되도록 적용

36. 이 외 작업들
	카테고리 (항공사, 렌터카, 레저)  별
회사 목록 페이지, 회사 상세(상품 목록) 페이지, 상품 상세 페이지, 결제 화면 페이지, 예약 상세 페이지, 예약 변경 페이지는 호텔의 작업과 비슷하기에 팀원들에게 코딩 작업을 끝낸 호텔 부분을 예시로서 배포 후 작업 보조 및 오류 수정

개발 도구 :

∙ 개발산출문서 – ER Diagram, Job List (Excel), Story Board (PowerPoint), 
∙ DB설계 - My SQL Developer
∙ IDE 도구 - IntelliJ
∙ 웹 서버 – Spring Boot
∙ 언어 - JAVA / JavaScript / HTML / CSS
∙ 주요 라이브러리 - jQuery / Apache Commons / MyBatis 
∙ 프레임워크 – Spring Framwork
